version: '3.8'

services:
  reverse-proxy:
    image: traefik:v3.0
    command: --api.insecure=true --providers.docker
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgresql:
    image: docker.io/library/postgres:15.5-alpine3.19
    volumes:
      - ./.data/postgresql:/var/lib/postgresql/data
    env_file: .env
    ports:
      - '5432:5432'

  redis:
    image: docker.io/library/redis:7.2-alpine
    ports:
      - '6379:6379'
    volumes:
      - ./.data/redis:/data

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.5
    restart: unless-stopped
    env_file: .env
    command: start-dev --db=postgres --db-username=keycloak --db-password=keycloak --db-url=jdbc:postgresql://keycloak-postgresql:5432/keycloak --hostname budget.localhost --http-relative-path auth
    depends_on:
      - keycloak-postgresql
    labels:
      - 'traefik.http.routers.keycloak.rule=Host(`budget.localhost`) && PathPrefix(`/auth`)'

  keycloak-postgresql:
    image: docker.io/library/postgres:15.5-alpine3.19
    volumes:
      - ./.data/keycloak-postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_DB: keycloak

  api:
    image: budget-api
    depends_on:
      - postgresql
      - redis
      - keycloak
    env_file: .env
    #    links:
    #      - keycloak
    #    extra_hosts:
    #      - "host.docker.internal:host-gateway"
    labels:
      - 'traefik.http.routers.api.rule=Host(`budget.localhost`) && PathPrefix(`/api`)'

  dashboard:
    image: budget-dashboard
    labels:
      - 'traefik.http.routers.dashboard.rule=Host(`budget.localhost`)'
